// @import url("https://fonts.googleapis.com/css?family=Nunito|Roboto&display=swap");
@import url("https://fonts.googleapis.com/css?family=Nunito|Roboto:300,400,500&display=swap");

$heading-font-family: "Roboto", sans-serif !default;
$copy-font-family: "Nunito", sans-serif !default;

// !global allows us to scope different sets of settings within the list

// Typography setter, mixins and classes based on breakpoints
// =============================================================================

$-type: () !default !global;

@mixin type-set($type-name, $breakpoint-name, $type-properties) {
  $type-group: map-get($-type, $type-name) or ();
  $type-group: map-merge(
    $type-group,
    (
      $breakpoint-name: $type-properties,
    )
  );
  $-type: map-merge(
    $-type,
    (
      $type-name: $type-group,
    )
  ) !global;
}

@mixin type($type-name, $type-property: null) {
  @if map-has-key($-type, $type-name) {
    $type-group: map-get($-type, $type-name);
    @each $breakpoint-name, $type-properties in $type-group {
      @include breakpoint($breakpoint-name) {
        @each $property, $value in $type-properties {
          @if not $type-property or $type-property == $property {
            #{$property}: #{$value};
          }
        }
      }
    }
  } @else {
    @warn "No type of #{$type-name} found.";
  }
}

@mixin yipify-type($prefix: "type--") {
  @each $type-name, $type-group in $-type {
    .#{$prefix}#{$type-name} {
      @include type($type-name);
    }
  }
}

// Breakpoints, setter and mixins for mobile-first layouts
// =============================================================================

$-breakpoints: (
  base: 0,
) !default !global;

@mixin breakpoint-set($breakpoint-name, $min-width) {
  $-breakpoints: map-merge(
    $-breakpoints,
    (
      $breakpoint-name: $min-width,
    )
  ) !global;
}

@mixin breakpoint($value: 0) {
  $min-width: map-get($-breakpoints, $value) or $value;
  @if $min-width > 0 {
    @media only screen and (min-width: #{$min-width}) {
      @content;
    }
  } @else {
    @content;
  }
}

// Spacing (margin and padding), setter and mixins for mobile-first layouts
// =============================================================================

$-spacing: () !default !global;

@mixin spacing-set($spacing-name, $value) {
  $-spacing: map-merge(
    $-spacing,
    (
      $spacing-name: $value,
    )
  ) !global;
}

@function spacing-get-value($spacing-name) {
  @if map-has-key($-spacing, $spacing-name) {
    @return map-get($-spacing, $spacing-name);
  } @else {
    @warn 'No spacing of #{$spacing-name} found.';
  }
}

// Default Settings
// =============================================================================
$output-classes: true !default;

// Default Breakpoints
// =============================================================================
@include breakpoint-set(small, 375px);
@include breakpoint-set(medium, 736px);
@include breakpoint-set(large, 1024px);

// Default Headline Typography Sizes
// =============================================================================
@include type-set(
  title-1,
  base,
  (
    font-family: $heading-font-family,
    font-size: 1.75rem,
    line-height: 1,
    letter-spacing: 0,
    margin: 1.5rem 0 1.5rem,
    font-weight: 400,
  )
);
@include type-set(
  title-1,
  medium,
  (
    font-size: 2rem,
  )
);

@include type-set(
  title-2,
  base,
  (
    font-family: $heading-font-family,
    font-size: 1.5rem,
    line-height: 1,
    align-self: baseline,
    margin: 3rem 0 1.5rem,
    font-weight: 400,
  )
);

@include type-set(
  title-3,
  base,
  (
    font-family: $heading-font-family,
    font-size: 1rem,
    line-height: 1,
    padding: 0.25rem 0,
    margin: 1.5rem 0,
    align-self: baseline,
    font-weight: 600,
    letter-spacing: 0.06em,
    text-transform: uppercase,
  )
);

@include type-set(
  title-4,
  base,
  (
    font-family: $heading-font-family,
    font-weight: 700,
    font-size: 1rem,
    line-height: 1,
    margin: 1.5rem 0,
    padding: 0.25rem 0,
  )
);

@include type-set(
  copy,
  base,
  (
    font-family: $copy-font-family,
    margin: 1.5em 0,
    font-size: 16px,
  )
);

@include type-set(
  first,
  base,
  (
    margin-top: 0,
  )
);

// Default Spacing Sizes
// =============================================================================
@include spacing-set(none, 0);
@include spacing-set(micro, 10px);
@include spacing-set(small, 20px);
@include spacing-set(medium, 30px);
@include spacing-set(large, 50px);
@include spacing-set(jumbo, 100px);
